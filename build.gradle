/*
 * Copyright (c) 2008 - 2013 MongoDB Inc., Inc. <http://mongodb.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'jacoco'

sourceCompatibility = '1.5'
targetCompatibility = '1.5'

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.11'
    testCompile 'org.codehaus.groovy:groovy-all:2.0.8'
    testCompile ('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude group: 'junit', module: 'junit-dep'
    }
}

sourceSets {
    main {
        java { srcDirs = ['src/main'] }
    }
    test {
        groovy { srcDirs = ['src/test'] }
        java { srcDirs = ['src/test'] }
    }
}

/* Compiling */
tasks.withType(AbstractCompile) {
    options.encoding = 'ISO-8859-1'
    options.fork = true
    options.debug = true

    onlyIf { JavaVersion.current().isJava6Compatible() }
}


test {
    maxHeapSize = "512m"

    useJUnit()
    jacoco { enabled = false }

    beforeTest { descr ->
        logger.info("[Test ${descr.className} > ${descr.name}]")
    }
}

task testAll(dependsOn: tasks.withType(Test))

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(check)) {
        tasks.withType(Test) { jacoco { enabled = true } }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.7'
}

apply from: 'gradle/ide-settings.gradle'



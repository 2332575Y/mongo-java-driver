/*
 * Copyright (c) 2008 - 2012 10gen, Inc. <http://10gen.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def configDir = new File(rootDir, 'config')

allprojects {
    apply plugin: 'idea'
    apply plugin: 'eclipse'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'pmd'
    apply plugin: 'findbugs'
    apply plugin: 'maven'

    group = 'org.mongodb'
    version = '3.0.0-SNAPSHOT'
    sourceCompatibility = '1.5'
    targetCompatibility = '1.5'

    checkstyle {
        configFile = new File("$configDir/checkstyle.xml")
        ignoreFailures = true
    }

    findbugs {
        ignoreFailures = true
    }

    pmd {
        ignoreFailures = true
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        testCompile 'junit:junit:4.11'
    }

    tasks.withType(Compile) {
        options.encoding = 'ISO-8859-1'
        options.fork = true
        options.debug = true
        options.compilerArgs = ['-Xlint:all']
    }

    sourceSets {
        main {
            java {
                srcDir 'src/main'
            }
        }
        test {
            java {
                srcDir 'src/test'
            }
        }
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc
    }

    task testsJar(type: Jar) {
        classifier = 'tests'
        from sourceSets.test.output
    }

    javadoc {
        options.author = true
        options.version = true
        options.links 'http://download.oracle.com/javase/1.5.0/docs/api/'
        options.tagletPath file("$rootDir/buildSrc/build/classes/main")
        options.taglets 'DochubTaglet', 'ManualTaglet'
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
        archives testsJar
    }
}

project(':common') {

}

project(':bson') {
    jar {
        manifest {
            attributes(
                    'Manifest-Version': 1.0,
                    'Bundle-License': 'http://www.apache.org/licenses/LICENSE-2.0.txt',
                    'Bundle-ManifestVersion': 2,
                    'Bundle-Name': 'BSON',
                    'Bundle-SymbolicName': 'org.mongodb.bson',
                    'Bundle-Version': version,
                    'Export-Package': "org.bson;version=\"$version\","
                            + "org.bson.util;version=\"$version\","
                            + "org.bson.types;version=\"$version\","
                            + "org.bson.io;version=\"$version\""
            )
        }
    }
    dependencies {
        compile project(':common')
    }

}

project(':driver') {

    sourceSets {
        acceptance {
            java {
                srcDir 'src/acceptancetest'
            }
        }
    }

    jar {
        baseName = 'driver-dist'
        from project(':bson').sourceSets.main.output
        manifest {
            attributes(
                    'Manifest-Version': 1.0,
                    'Bundle-License': 'http://www.apache.org/licenses/LICENSE-2.0.txt',
                    'Bundle-ManifestVersion': 2,
                    'Bundle-Name': 'MongoDB Java Driver',
                    'Bundle-SymbolicName': 'org.mongodb.mongo-java-driver',
                    'Bundle-Version': version,
                    'Import-Package': 'javax.management, javax.net, javax.net.ssl',
                    'Export-Package': "com.mongodb;version=\"$version\","
                            + "com.mongodb.io;version=\"$version\","
                            + "com.mongodb.util;version=\"$version\","
                            + "com.mongodb.gridfs;version=\"$version\","
                            + "org.bson;version=\"$version\","
                            + "org.bson.util;version=\"$version\","
                            + "org.bson.util.annotations;version=\"$version\","
                            + "org.bson.types;version=\"$version\","
                            + "org.bson.io;version=\"$version\""

            )
        }
    }

    task acceptanceTest(type: Test) {
        testClassesDir = sourceSets.acceptance.output.classesDir
        classpath = sourceSets.acceptance.runtimeClasspath
    }


    sourcesJar {
        from project(':bson').sourceSets.main.allSource
    }

    javadoc {
        source project(':bson').sourceSets.main.allJava
    }

    testsJar {
        from sourceSets.acceptance.output
    }

    dependencies {
        compile project(':common')
        compile project(':bson')
        acceptanceCompile 'junit:junit:4.11'
        acceptanceCompile sourceSets.main.runtimeClasspath
    }
}

project(':driver-compat') {
    jar {
        baseName = 'driver-compat-dist'
        from project(':bson').sourceSets.main.output
        from project(':driver').sourceSets.main.output
        manifest {
            attributes(
                    'Manifest-Version': 1.0,
                    'Bundle-License': 'http://www.apache.org/licenses/LICENSE-2.0.txt',
                    'Bundle-ManifestVersion': 2,
                    'Bundle-Name': 'MongoDB Java Driver',
                    'Bundle-SymbolicName': 'org.mongodb.mongo-java-driver',
                    'Bundle-Version': version,
                    'Import-Package': 'javax.management, javax.net, javax.net.ssl',
                    'Export-Package': "com.mongodb;version=\"$version\","
                            + "com.mongodb.io;version=\"$version\","
                            + "com.mongodb.util;version=\"$version\","
                            + "com.mongodb.gridfs;version=\"$version\","
                            + "org.bson;version=\"$version\","
                            + "org.bson.util;version=\"$version\","
                            + "org.bson.util.annotations;version=\"$version\","
                            + "org.bson.types;version=\"$version\","
                            + "org.bson.io;version=\"$version\""

            )
        }
    }

    sourcesJar {
        from project(':bson').sourceSets.main.allSource
        from project(':driver').sourceSets.main.allSource
    }

    javadoc {
        source project(':bson').sourceSets.main.allJava
        source project(':driver').sourceSets.main.allJava
    }

    dependencies {
        compile project(':driver')
    }
}

project(':morphia') {
    dependencies {
        compile 'com.thoughtworks.proxytoys:proxytoys:1.0'
        compile project(':driver-compat')
    }
}


// Uses:
//   maven-publish 
//    - uploads the artifacts to sonatype nexus
//    - called using /.gradlew publish
//    - see http://www.gradle.org/docs/current/userguide/publishing_maven.html for more details.
//    - specific settings for each project's pom.xml are in the project build.gradle files

configure(subprojects.findAll { it.name != 'util' }) {
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    /* Artifacts for publishing */
    task sourceJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifact sourceJar
                artifact javadocJar

                // publishes the module code and not the uber jar
                from components.java

                // this adds the following details to the published pom.xml
                pom.withXml {
                    def scm = asNode().appendNode('scm')
                    scm.appendNode('url', 'https://github.com/mongodb/mongo-java-driver')
                    scm.appendNode('connection', 'scm:git:git://github.com/mongodb/mongo-java-driver')

                    def licence = asNode().appendNode('licenses').appendNode('license')
                    licence.appendNode('name', 'The Apache Software License, Version 2.0')
                    licence.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
                    licence.appendNode('distribution', 'repo')

                    def developers = asNode().appendNode('developers').appendNode('developer')
                    developers.appendNode('name', 'Various')
                    developers.appendNode('organization', 'MongoDB, Inc.')
                }
            }
        }
    }

    publishing {
        repositories {
            maven {
                if (version.endsWith('-SNAPSHOT')) {
                    url 'https://oss.sonatype.org/content/repositories/snapshots'
                } else {
                    url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                }

                credentials {
                    username project.properties.sonatypeUsername
                    password project.properties.sonatypePassword
                }
            }
        }
    }

}
